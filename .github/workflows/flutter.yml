name: Flutter CI/CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  FLUTTER_VERSION: '3.19.0'
  JAVA_VERSION: '17'
  XCODE_VERSION: '14.2'

jobs:
  test:
    name: Analysis and Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'

      - name: Cache pub dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get
        timeout-minutes: 10

      - name: Check formatting
        run: dart format --set-exit-if-changed .

      - name: Analyze project source
        run: flutter analyze

      - name: Run tests with coverage
        run: flutter test --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info

  build-android:
    name: Build Android
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build APK
        run: |
          flutter pub get
          flutter clean
          flutter build apk --release
        timeout-minutes: 30

      - name: Build App Bundle
        run: flutter build appbundle --release
        timeout-minutes: 30

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

      - name: Upload App Bundle
        uses: actions/upload-artifact@v3
        with:
          name: release-bundle
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 7

  build-ios:
    name: Build iOS
    needs: test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install dependencies
        run: |
          flutter pub get
          cd ios && pod install && cd ..
        timeout-minutes: 10

      - name: Build iOS
        run: |
          flutter clean
          flutter build ios --release --no-codesign
        timeout-minutes: 30

  build-web:
    name: Build Web
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Build Web
        run: |
          flutter pub get
          flutter clean
          flutter build web --release
        timeout-minutes: 30

      - name: Upload Web Build
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: build/web
          retention-days: 7

  deploy-web:
    name: Deploy Web
    needs: build-web
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download Web Build
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: web-build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: web-build
          force_orphan: true

  create-release:
    name: Create Release
    needs: [build-android, build-ios, build-web]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: release-apk
          path: releases

      - name: Download App Bundle
        uses: actions/download-artifact@v3
        with:
          name: release-bundle
          path: releases

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            releases/app-release.apk
            releases/app-release.aab
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 